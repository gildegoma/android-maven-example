language: java
jdk: oraclejdk7
env:
  matrix:
    # android-16 is always included
    - ANDROID_SDKS=android-8            ANDROID_TARGET=android-8   ANDROID_ABI=armeabi
    - ANDROID_SDKS=android-10           ANDROID_TARGET=android-10  ANDROID_ABI=armeabi
    - ANDROID_SDKS=sysimg-16            ANDROID_TARGET=android-16  ANDROID_ABI=armeabi-v7a
    - ANDROID_SDKS=android-17,sysimg-17 ANDROID_TARGET=android-17  ANDROID_ABI=armeabi-v7a
before_install:
  # Install base Android SDK
  - gcc --version #check which is default gcc version on travis worker
  - sudo apt-get update -qq
#  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq libc6:i386 libgcc1:i386 gcc-4.6-base:i386 libstdc++5:i386 libstdc++6:i386 lib32z1 libreadline6-dev:i386 libncurses5-dev:i386; fi
#  dummy travis trigger because i forgot to plug this repo into travis-ci !!!
#  looking for the minimal i386 library set:
#  Why not gcc-4.7-base:i386 => because travis vm is provisioned with 4.6 by default and it's good to match. 'build-essential' package dependency claim ">=4.4.3" and 4.6.3 is currently installed. Is there any generic/virtual package to get official latest???? could be nice to get rid of gcc-4.6-base package (and rely on dependency tree)
  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq libstdc++6:i386; fi
#/usr/bin/gcc is broken after i386 installed in parallel  - gcc --version #check which is default gcc version on CUSTOMIZED travis worker
  - wget -O android-sdk.tgz http://dl.google.com/android/android-sdk_r22.0.4-linux.tgz
  - tar xzf android-sdk.tgz
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

  # Install required components.
  # For a full list, run `android list sdk -a --extended`
  # Note that sysimg-16 downloads the ARM, x86 and MIPS images (we should optimize this).
  # Note that `echo y` only accepts the first license. This is actually convenient, since
  # it prevents the installation of the ATOM and MIPS emulator images. It might cause
  # issues in the future though.
  - echo y | android update sdk --filter platform-tools,build-tools-18.0.1,android-16,extra-android-support,$ANDROID_SDKS --no-ui --force > /dev/null

  # Create and start emulator
  - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window &

before_script:
  - ./wait_for_emulator

script: mvn install -Pintegration-tests -Dandroid.device=test
